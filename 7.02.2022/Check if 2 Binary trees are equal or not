#include<iostream>
using namespace std;

struct node         //creating BT DataStructure called node
{int data;
node* left;
node* right;
};

node* newnode(int data)
{node* Node=new node();
Node->data=data;
return Node;
}

int equal_trees(node* root1, node* root2)
{
if(root1!=NULL && root2!=NULL)
 return root1->data==root2->data && equal_trees(root1->left,root2->left) && equal_trees(root1->right,root2->right);

 else if(root1==NULL && root2==NULL)
   return 1;

 else
    return 0;
}

int main()
{node* root1=newnode(10);
root1->left=newnode(2);
root1->right=newnode(3);

node* root2=newnode(1);
root2->left=newnode(2);
root2->right=newnode(3);

if(equal_trees(root1,root2))
 cout<<"\nTrees equal\n";

 else
  cout<<"\nTrees not equal\n";

return 0;
}
